{
    "version": 3,
    "file": "css/model_viewer.css",
    "mappings": "AAAA,2ZCOC,QACA,eACA,aACA,CACA,2BACA,iBAZD,QAMC,UACA,CAGA,uBAGA,+EAED,aACC,MAED,aACC,OAED,eACC,cAED,WACC,qDAED,UACC,aACA,OAED,wBACC,iBACA,MD1BG,sBAHO,YAAM,CACb,iBACA,kBACA,CAHa,wBACb,CADa,qBACb,CADa,gBACb,CAFJ,WAKa,iBAIF,WAAM,CACK,OAHtB,iBETC,CFWgB,KACK,CEZrB,UFYuB,gBAExB,YE6BC,YFxBD,wBACI,gBACA,iEACA,qBACJ,gBACI,qDACA,YACA,sBACJ,gBACI,2FACA",
    "sources": [
    "webpack://qmimi2024/./src/sass/model_viewer.sass",
    "webpack://qmimi2024/./src/sass/_reset.sass",
    "webpack://qmimi2024/./src/sass/_mixin.sass"
    ],
    "sourcesContent": [
    "@import reset\n@import mixin\n\nbody\n    +setWH(100vw,100vh)\n    user-select: none\n    overflow-x: hidden\n    overflow-y: hidden\n    +bgColor(#ffffff)\n\ncanvas.a-canvas\n    +ab\n    +setWH(100%, 100%)\n    +setPosition(\"TL\",0,0)\n\n\ndiv.a-enter-vr\n    +hide\n\n\n// 字型\n@font-face \n    font-family: 'BebasRegular'\n    font-weight: normal\n    src: url('../fonts/BebasRegular.woff') format(\"woff\")\n@font-face \n    font-family: 'BebasBold'\n    font-weight: normal\n    src: url('../fonts/BebasBold.woff') format(\"woff\")\n@font-face \n    font-family: 'NotoSansTC'\n    font-weight: normal\n    src: url('https://fonts.gstatic.com/ea/notosanstc/v1/NotoSansTC-Regular.woff') format('woff')",
    "html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n\na, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li,\nfieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary, time, mark, audio, video\n\tmargin: 0\n\tpadding: 0\n\tborder: 0\n\tfont-size: 100%\n\tfont: inherit\n\tvertical-align: baseline\n\tfont-family: \"BebasBold\",\"微軟正黑體\"\n\tfont-weight: normal\n\narticle, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section\n\tdisplay: block\n\nbody \n\tline-height: 1\n\t\nol, ul \n\tlist-style: none\n\nblockquote, q \n\tquotes: none\n\nblockquote:before, blockquote:after, q:before, q:after \n\tcontent: ''\n\tcontent: none\n\n\ntable \n\tborder-collapse: collapse\n\tborder-spacing: 0",
    "@mixin ab\n\tposition: absolute\n\n@mixin nomouse\n\tpointer-events: none\n\tuser-select: none\n\n@mixin re\n\tposition: relative\n\n@mixin fx\n\tposition: fixed\n\n@mixin allCenter\n\tdisplay: flex\n\talign-items: center\n\tjustify-content: center\n\t//flex-wrap: wrap\n\n@mixin o($o)\n\topacity: $o\n\n@mixin fs($size)\n\tfont-size: $size\n\n@mixin borderR($radius)\n\tborder-radius: $radius\n\n@mixin ls($s)\n\tletter-spacing: $s\n\n@mixin lh($h)\n\tline-height: $h\n\n@mixin talign($align)\n\ttext-align: $align\n\n@mixin ff($f)\n\tfont-family: $f\n\n@mixin show\n\tdisplay: block\n\n@mixin hide\n\tdisplay: none\n\n@mixin bgColor($color)\n\tbackground-color: $color\n\n@mixin full\n\twidth: 100%\n\theight: 100%\n\ttop: 0\n\tleft: 0\n\n@mixin minH($h)\n\tmin-height: $h\n\n@mixin h($h)\n\theight: $h\n\n@mixin w($w)\n\twidth: $w\n\n@mixin t($t)\n\ttop: $t\n\n@mixin l($l)\n\tleft: $l\n\n@mixin r($r)\n\tright: $r\n\n@mixin b($b)\n\tbottom: $b\n\n@mixin mt($mt)\n\tmargin-top: $mt\n\n@mixin mb($mb)\n\tmargin-bottom: $mb\n\n@mixin ml($ml)\n\tmargin-left: $ml\n\n@mixin mr($mr)\n\tmargin-right: $mr\n\n@mixin pt($t)\n\tpadding-top: $t\n\n@mixin pb($b)\n\tpadding-bottom: $b\n\n@mixin pl($l)\n\tpadding-left: $l\n\n@mixin pr($r)\n\tpadding-right: $r\n\n@mixin valign($align)\n\tvertical-align: $align\n\n@mixin setWH($w, $h)\n\twidth: $w\n\theight: $h\n\n@mixin setW($w)\n\twidth: $w\n\n@mixin setH($h)\n\theight: $h\n\n@mixin hand\n\tcursor: pointer\n\n@mixin setPosition($position, $p1, $p2)\n\t@if $position == \"TL\"\n\t\ttop: $p1\n\t\tleft: $p2\n\t@else if $position == \"TC\"\n\t\tleft: 0\n\t\tright: 0\n\t\ttop: $p1\n\t\tmargin: auto\n\t@else if $position == \"TR\"\n\t\ttop: $p1\n\t\tright: $p2\n\t@else if $position == \"CL\"\n\t\tleft: $p2\n\t\ttop: 0\n\t\tbottom: 0\n\t\tmargin: auto\n\t@else if $position == \"CC\"\n\t\tleft: 0\n\t\tright: 0\n\t\ttop: 0\n\t\tbottom: 0\n\t\tmargin: auto\n\t@else if $position == \"CR\"\n\t\tright: $p2\n\t\ttop: 0\n\t\tbottom: 0\n\t\tmargin: auto\n\t@else if $position == \"BL\"\n\t\tbottom: $p1\n\t\tleft: $p2\n\t@else if $position == \"BC\"\n\t\tleft: 0\n\t\tright: 0\n\t\tbottom: $p1\n\t\tmargin: auto\n\t@else if $position == \"BR\"\n\t\tbottom: $p1\n\t\tright: $p2\n\n@mixin setFont($size, $color, $ls)\n\tfont-size: $size\n\tcolor: $color\n\tletter-spacing: $ls\n\n@mixin setFont_NC($size, $ls)\n\tfont-size: $size\n\tletter-spacing: $ls\n\n@mixin opacityTo($from, $to)\n\t0%\n\t\topacity: $from\n\t100%\n\t\topacity: $to\n\n@mixin respond-to($device)\n\t@if $device == portrait\n\t\t@media only screen and (orientation: portrait)\n\t\t\t@content\n\t@if $device == landscape\n\t\t@media only screen and (orientation: landscape)\n\t\t\t@content"
    ],
    "names": [],
    "sourceRoot": ""
}
